LAN을 넘어서 다른 네트워크와 통신하기 위해서는 네트워크 계층의 역할이 필수이다.

데이터 링크 계층의 한계
    물리 계층과 데이터 링크 계층만으로는 LAN을 넘어서 통신하기는 어려운데, 대표적으로 두가지 이유가 있다.
    
    1. 물리 계층과 데이터 링크 계층만으로는 다른 네트워크까지의 도달 경로를 파악하기 어렵다.
        물리 계층과 데이터 링크 계층은 기본적으로 LAN을 다루는 계층이지만, LAN에 속한 호스트 끼리만 통신하지는 않는다.
        통신을 빠르게 주고받으려면 최적의 경로로 패킷이 이동해야 하는데, 패킷이 이동할 최적의 경로를 결정하는 것을 라우팅이라고한다.
        물리 계층와 데이터 링크 계층의 장비로는 라우팅을 수행할 수 없지만, 네트워크 계층의 장비로는 가능하다.

    2. MAC 주소만으로는 모든 네트워크에 속한 호스트이 위치를 특정하기 어렵다.
        현실적으로 모든 호스트가 모든 네트워크에 속한 모든 호스트의 MAC주소를 서로 알고 있기란 어렵기에, MAC주소만으로는 이 세상에 있는
        모든 호스트를 특정하기가 어렵다.
        수신인 역할을 하는 정보가 MAC주소라면, 수신지 역할을 하는 정보는 네트워크 계층의 IP주소이다. 네트워크에서도 MAC주소와 IP주소를 함께 사용하고,
        기본적으로 IP주소를 우선으로 활용한다. IP주소는 논리주소라고도 부른다. MAC주소는 일반적으로 NIC마다 할당되는 고정된 주소지만,
        IP주소는 호스트에 직접 할당이 가능하다. DHCP라는 특정 프로토콜을 통해 자동으로 할당받거나, 사용자가 직접 할당할 수 있고, 한 호스트가
        복수의 IP주소를 가질 수도 있다.
        
    정리하자면, 물리계층과 데이터 링크 계층만으로는 네트워크 간의 통신이 어렵고, 네트워크 계층이 다른 네트워크와의 통신을 가능하게 한다.
    IP주소를 이용해 수신지 주소를 설정하거나, 해당 수신지까지의 최적의 경로를 결정하는 라우팅이 네트워크 계층에서 이루어지기 때문이라는걸 잊지말자.


인터넷 프로토콜을
    네트워크 계층의 가장 핵심적인 프로토콜 하나를 꼽자면 인터넷 프로토콜이라고 할 수있다.

    IP에는 IPv4와 IPv6 두 가지 버전이 있다.
        IPv4
            프레임의 페이로드로 데이터 필드에 명시된다.
            핵심이 되는 부분인 필드는 식별자, 플래그, 단편화 오프셋, TTL, 프로토콜, 송신지IP주소, 수신지IP주소 총 7개이다.
            이 중 식별자, 플래그, 단편화 오프셋 필드는 IP단편화 기능에 관여하고
            송신지IP주소, 수신지IP주소는 IP주소 지정 기능에 관여한다.

            식별자
                패킷에 할당된 번호이다. 잘개 쪼개져 수신지에 도착한 IPv4 패킷들이 어떤메시지에서 쪼개졌는지를 인식하기 위해 사용한다.

            플래그
                3개의 비트로 구성된 필드이다. 첫 번째 비트는 항상 0으로 예약된 비트로 현재는 사용되지 않고, 사용되는 나머지 2개의 비트중에서
                하나는 DF라는 이름이고, 다른 하나는 MF라는 비트이다.
                DF는 IP단편화를 수행하지 말라는 표시이고, MF는 단편하된 패킷이 더 있는지를 나타낸다. 0이라면 마지막 패킷임을 의미하고, 1이라면 쪼개진 패킷이 더 있다는 것을 의미한다.
            
            단편화 오프셋
                패킷이 단편화되기 전에 패킷의 초기 데이터에서 몇번째로 떨어진 패킷인지를 나타낸다. 단편화되어 전송되는 패킷들은 수신지에 순서대로 도착하지 않을 수 있기 때문에,
                단편화된 패킷이 초기 데이터에서 몇 번째 데이터에 해당하는 패킷인지 알아야 할 때 사용된다.

            TTL
                패킷의 수명을 의미한다. 패킷이 하나의 라우터를 거칠 때마다 TTL이 1씩 감소하며, TTL값이 0으로 떨어진 패킷은 폐기된다.
                TTL필드의 존재 이유는 무의미한 패킷이 네트워크상에 지속적으로 남아있는 것을 방지하기 위함이다.

            프로토콜
                상위 계층의 프로토콜이 무엇인지를 나타내는 필드이다.
            
            송신지IP주소 / 수신지IP주소
                이름 그대로이다.

        IPv6
            16바이트로 주소를 표현할 수 있고, 콜론으로 구분된 8개 그룹의 16진수로 표기된다. (할당 가능한 IP 주소가 무한)
            핵심이 되는 부분인 필드는 다음 헤더, 홉 제한, 송신지IP주소, 수신지IP주소 총 4가지 이다.

            다음 헤더
                상위 계층의 프로토콜을 가리키거나 확장 헤더를 가리킨다.
                추가적인 헤더 정보가 필요할 경우에 기본 헤더와 더불어 확장 헤더라는 추가 헤더를 가질 수 있다.

            홉 제한
                IPv4 패킷의 TTL필드와 비슷하게 패킷의 수명을 나타내는 필드이다.

            송신지IP주소 / 수신지IP주소
                이름 그대로이다

    IP 주소 형태
        IP주소는 4바이트로 주소를 표현할 수 있고, 숫자당 8비트로 표현되기에 0~255 범위안에 4개의 10진수로 표기된다.

    IP의 기능
        IP 주소 지정
            IP주소를 바탕으로 송수신 대상을 지정하는 것을 의미한다.

        IP 단현화
            전송하고자 하는 패킷의 크기가 MTU라는 최대 전송 단위보다 클 경우, 이를 MTU크기 이하의 복수의 패킷으로 나누는 것을 의미한다.
            MTU란 한번에 전송 가능한 IP패킷의 최대 크기를 의미한다.

    ARP
        상대 호스트의 IP주소는 알지만, MAC주소는 알지 못할 때, ARP라는 프로토콜을 사용한다.
        ARP는 IP주소를 통해 MAC주소를 알아내는 프로토콜이다.

        ARP의 동작 과정
        1. ARP 요청
            네트워크 내의 모든 호스트에게 브로드캐스트 메시지를 보내는데 이 메시지는 ARP요청이라는 ARP패킷이다.
        2. ARP 응답
            네트워크 내의 모든 호스트가 ARP 요청 메시지를 수신하지만 자신을 제외한 나머지 호스트는 자신의 IP주소가 아니므로 이를 무시한다.
            자신의 MAC주소를 담은 메시지를 A라는 호스트에 전송한다면, 이 유니캐스트 메시지는 ARP응답이라는 ARP패킷이다.
            이를 수신한 A라는 호스트는 나의 MAC주소를 알게된다.
        3. ARP 테이블 갱신
            ARP를 활용할 수 있는 모든 호스트는 ARP테이블이라는 정보를 유지한다.
            IP주소와 그에 맞는 MAC주소 테이블을 대응하는 표를 의미한다.
            타 호스트에서 내 호스트의 MAC주소를 알게 되면, 내 IP주소와 MAC주소의 연관관계를 ARP테이블에 추가하는 형식이다.
            테이블이 갱신되면 해당 호스트와 나는 굳이 브로드캐스트로 ARP요청을 보낼 필요가 없어진다.

        ARP는 동일 네트워크 내에 있는 호스트의 IP주소를 통해 MAC주소를 알아내는 프로토콜인데, 다른 네트워크의 MAC주소는 어떻게 알아낼까?
            ARP요청-응답 과정을 통해 라우터A의 MAC주소를 얻어와서 이를 향해 패킷에 전송한다.
            전달 받은 라우터A는 라우터B로 패킷을 전달해야하는데, A가B의 MAC주소를 모른다면 ARP요청-응답과정을 거쳐 B의 MAC주소를 얻어온다.
            주소를 얻어 전달받게되면 라우터B는 호스트B로 전달해야하는데, 똑같이 호스트B의 MAC주소를 모른다면 ARP요청-응답과정을 거쳐 호스트B에 전송한다.

