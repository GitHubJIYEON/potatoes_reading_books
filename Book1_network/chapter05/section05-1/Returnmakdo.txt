DNS와 자원

  메시지를 주고받고자 하는 대상을 파악하기 위해서는 IP주소 이외에 도메인 네임을 사용할 수 있다.
  송수신하고자 하는 정보를 식별하기 위한 방법으로는 위치 기반의 식별자인 URL과 이름 기반의 식별자인 URN이 있다.


도메인 네임과 네임 서버
  호스트의 IP주소와 대응되는 문자열 형태의 호스트 특정 정보이다.
  도메인 네임과 IP주소는 네임 서버에서 관리하고, 도메인 네임을 관리하는 네임 서버는 DNS서버라고도 부른다.

  도메인 네임은 점을 기준으로 계층적으로 분류된다.
  최상단에 루트 도메인이 있고, 그 다음 단계인 최상위 도메인이 있으며, 계속 그 다음 단계의 도메인이 있는 식이다.

  도메인 네임의 마지막 부분을 최상위 도메인, 줄여서 TLD라고 한다. 예를 들어 www.example.com은 최상위 도메인이 com인 것이다.

  최상위 도메인의 하부 도메인은 2단계 도메인이라고 한다. 예를 들어 www.example.com은 example이 2단계 도메인인 것 이다.

  나아가 www는 3단계 도메인이고, www.example.com처럼 도메인 네임을 모두 포함하는 도메인 네임을 전체 주소 도메인 네임(FQDN)이라고 한다.
  
  계층적인 도메인 네임을 효율적으로 관리하기 위해 네임 서버 또한 계층적인 형태를 이룬다. 또 네임 서버는 여러개 존재하며,
  전 세계 여러군데에 위치해있다. 이렇게 계층적이고 분산된 도메인 네임에 대한 관리 체계를 도메인 네임 시스템, 줄여서 DNS라고 부른다.

계층적 네임서버
  로컬 네임서버
    클라이언트와 맞닿아 있는 네임 서버로, 클라이언트가 도메인 네임을 통해 IP주소를 알아내고자 할 때 가장 먼저 찾게되는 네임서버이다.
    로컬 네임 서버의 주소는 일반적으로 ISP에서 할당해 주는 경우가 많지만, ISP에서 할당해주는 로컬 네임서버 주소가 아닌 공개 DNS서버를 이용할 수도 있다.
  
  공개 DNS서버
    대표적인 예로는 구글의 8.8.8.8, 8,8,4,4와 클라우드플레어의 1.1.1.1이 있다.
  
  루트 네임 서버
    루트 도메인을 관장하는 네임 서버로, 질의에 대해 TLD 네임서버의 IP주소를 반환할 수 있다.
  
  TLD 네임 서버
    TLD를 관리하는 네임 서버이다. TLD의 하위 도메인 네임을 관리하는 네임 서버 주소를 반환할 수 있다.
    하위 도메인 네임을 관리하는 네임서버는 마찬가지로 그보다 하위 도메인 네임을 관리하는 네임 서버 주소를 반환할 수 있다.
  
  책임 네임 서버
    특정 도메인 영역을 관리하는 네임서버로, 자신이 관리하는 도메인 영역의 질의에 대해서는 다른 네임 서버에게 떠넘기지 않고
    곧바로 답할 수 있는 네임서버 이다.
    일반적으로 로컬 네임 서버는 책임 네임 서버로부터 원하는 IP주소를 얻어낸다. 이처럼 루트 도메인을 관리하는
    루트 네임 서버부터 TLD를 관리하는 TLD 네임 서버, 최종 IP주소를 답해주는 책임 네임 서버에 이르기까지, 네임 서버들은 
    계층적인 구조를 띄고 있다.

IP주소를 알아내는 과정
  로컬 네임서버가 네임 서버들에게 질의하는 방법에는 크게 재귀적 질의와 반복적 질의라는 두가지 방법이 있다.

  재귀적 질의
    클라이언트가 로컬 네임 서버에게 도메인 네임을 질의하면, 로컬 네임 서버가 루트 네임서버에게 질의하고, 루트 네임서버가 TLD 네임서버에게 질의하고,
    TLD 네임 서버가 다음 단계에 질의하는 과정을 반복하며 최종 응답 결과를 역순으로 전달받는 방식이다.
  
  반복적 질의
    클라이언트가 로컬 네임 서버에게 IP주소를 알고 싶은 도메인 네임을 질의하면, 로컬 네임 서버는 루트 도메인 서버에게 질의해서 
    다음으로 질의할 네임 서버의 주소를 응답받고, 다음으로 TLD 네임 서버에게 질의해서 다음으로 질의할 네임서버의 주소를 응답받는 과정을 반복하다가
    최종 응답 결과를 클라이언트에게 알려주는 방식이다.

  하나의 도메인 네임을 리졸빙하기 위해 8단계를 거쳐야하는 것 처럼 시간이 오래걸리고, 네트워크상의 메시지 수가 지나치게 늘어날 수 있다.
  그래서 실제로는 네임서버들이 기존에 응답받은 결과를 임시로 저장했다가 추후 같은 질의에 이를 활용하는 경우가 많은데, 이를 DNS캐시라고한다.
  DNS캐시는 TTL(캐시될 수 있는 시간)이라는 값과 함께 저장된다.

자원을 식별하는 URI
  자원
    네트워크상의 메시지를 통해 주고받는 대상을 의미한다.
    오늘날 인터넷 환경을 이루는 대부분의 통신은 HTTP 기반으로 이루어지므로, 자원이라는 용어는 HTTP 요청 메시지의 대상이라고도 표현한다.
  
  자원을 식별할 수 있는 정보를 URI라고 부른다.
  URI는 위치를 이용해 자원을 식별할 수 있고, 이름을 이용해 자원을 식별할 수 있는데, 전자를 URL, 후자를 URN이라고 한다.

  URL -> 예시: foo://www.example.com:804/over/there?name=ferret#nose

    1. URL의 첫 부분은 scheme이다. scheme는 자원에 접근하는 방법을 의미한다.
    2. authority(www.example.com:8042)에는 호스트를 특정할 수 있는 정보 (IP주소 혹은 도메인네임)가 명시된다.
    3. path(/over/there) 자원이 위치한 경로가 명시된다.
    4. query(?name=ferret) 수많은 정보 중에서 특정 단어를 검색한 결과에 해당하는 자원이나 수많은 상품 중 특정 상품을 검색한 뒤 그 결과를 내림차순으로 정렬한 결과
    와 같은 자원을 얻어야할 때 사용하는데, 쿼리에는 쿼리문자열, 쿼리파라미터가 있다. ?query=value&query2=value2... 이런식
    5. fragment(#nose)는 자원의 한 조각을 가리키기 위한 정보이다. 흔히 HTML파일과 같은 자원에서 특정 부분을 가리킬 때 사용한다.

URN
  자원의 위치가 변한다면 URL은 유효해지지 않을 수 있고, 이는 URL의 고질적인 문제이다.
  반면 URN은 자원에 고유한 이름을 붙이는 이름 기반 식별자이기에 자원의 위치와 무관하게 자원을 식별할 수 있다는 장점이 있다.

